{"version":3,"sources":["../node_modules/reactstrap/es/UncontrolledCollapse.js","components/reactstrap/collapse/CollapseSourceCode.js","components/reactstrap/collapse/CollapseDefault.js","components/reactstrap/collapse/CollapseUncontrolled.js","components/reactstrap/collapse/Accordion.js","components/reactstrap/collapse/AccordionShadow.js","components/reactstrap/collapse/AccordionBorder.js","components/reactstrap/collapse/AccordionMargin.js","components/reactstrap/collapse/AccordionHover.js","components/reactstrap/collapse/Collapse.js","../node_modules/prismjs/components/prism-jsx.min.js","../node_modules/reactstrap/es/Nav.js","../node_modules/reactstrap/es/Collapse.js"],"names":["omitKeys","propTypes","defaultOpen","PropTypes","bool","toggler","string","isRequired","toggleEvents","arrayOf","defaultProps","defaultToggleEvents","UncontrolledCollapse","_Component","props","_this","call","this","togglers","removeEventListeners","toggle","bind","_assertThisInitialized","state","isOpen","_inheritsLoose","_proto","prototype","componentDidMount","findDOMElements","length","addMultipleEventListeners","componentWillUnmount","e","setState","_ref","preventDefault","render","React","createElement","Collapse","_extends","omit","Component","accordion","className","accordionShadow","accordionBorder","accordionMargin","accordionHover","collapseUncontrolled","collapseDefault","collapseItems","id","title","content","CollapseDefault","_React$Component","_inherits","_super","_createSuper","_classCallCheck","_len","arguments","args","Array","_key","apply","concat","activeTab","status","toggleTab","tab","toggleCollapse","collapseID","index","indexOf","items","splice","push","onEntered","includes","onEntering","onExited","onExiting","_createClass","key","value","_this2","renderCollapse","map","collapseItem","Card","onClick","classnames","closing","opening","CardHeader","CardTitle","ChevronDown","size","CardBody","Fragment","Nav","tabs","NavItem","NavLink","active","Eye","Code","TabContent","TabPane","tabId","CollapseUncontrolled","Accordion","prevState","accordionItems","AccordionShadow","accordionShadowItems","open","AccordionBorder","accordionBorderItems","AccordionMargin","accordionMarginItems","AccordionHover","accordionHoverItems","onMouseEnter","Collaspe","Prism","highlightAll","BreadCrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","xl","lg","t","n","util","clone","languages","javascript","a","replace","RegExp","source","jsx","extend","tag","pattern","inside","comment","insertBefore","spread","script","alias","rest","s","join","g","o","i","type","tagName","pop","openedBraces","r","Token","hooks","add","language","tokens","_excluded","pills","vertical","oneOfType","horizontal","justified","fill","navbar","card","tagPropType","cssModule","object","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","getVerticalClass","_transitionStatusToCl","ownKeys","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","_objectSpread","target","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","Transition","children","node","innerRef","func","appear","enter","exit","timeout","TransitionTimeouts","transitionStatusToClassHash","TransitionStatuses","ENTERING","ENTERED","EXITING","EXITED","getHeight","scrollHeight","height","name","isAppearing","onExit","offsetHeight","_this$props","otherProps","transitionProps","pick","TransitionPropTypeKeys","childProps","in","collapseClass","getTransitionClass","style","ref"],"mappings":"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","file":"static/js/85.b36b5ff1.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Collapse from './Collapse';\nimport { omit, findDOMElements, defaultToggleEvents, addMultipleEventListeners } from './utils';\nvar omitKeys = ['toggleEvents', 'defaultOpen'];\nvar propTypes = {\n  defaultOpen: PropTypes.bool,\n  toggler: PropTypes.string.isRequired,\n  toggleEvents: PropTypes.arrayOf(PropTypes.string)\n};\nvar defaultProps = {\n  toggleEvents: defaultToggleEvents\n};\n\nvar UncontrolledCollapse = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(UncontrolledCollapse, _Component);\n\n  function UncontrolledCollapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.togglers = null;\n    _this.removeEventListeners = null;\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.state = {\n      isOpen: props.defaultOpen || false\n    };\n    return _this;\n  }\n\n  var _proto = UncontrolledCollapse.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.togglers = findDOMElements(this.props.toggler);\n\n    if (this.togglers.length) {\n      this.removeEventListeners = addMultipleEventListeners(this.togglers, this.toggle, this.props.toggleEvents);\n    }\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    if (this.togglers.length && this.removeEventListeners) {\n      this.removeEventListeners();\n    }\n  };\n\n  _proto.toggle = function toggle(e) {\n    this.setState(function (_ref) {\n      var isOpen = _ref.isOpen;\n      return {\n        isOpen: !isOpen\n      };\n    });\n    e.preventDefault();\n  };\n\n  _proto.render = function render() {\n    return /*#__PURE__*/React.createElement(Collapse, _extends({\n      isOpen: this.state.isOpen\n    }, omit(this.props, omitKeys)));\n  };\n\n  return UncontrolledCollapse;\n}(Component);\n\nUncontrolledCollapse.propTypes = propTypes;\nUncontrolledCollapse.defaultProps = defaultProps;\nexport default UncontrolledCollapse;","import React from \"react\"\r\n\r\nexport const accordion = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass Accordion extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate\">\r\n      {accordionItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default Accordion`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionShadow = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionShadow extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionShadowItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              className={classnames({\r\n                open: collapseItem.id === this.state.collapseID\r\n              })}\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate accordion-shadow\">\r\n      {accordionShadowItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionShadow`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionBorder = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionBorder extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionBorderItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              className=\"collapse-border-item\"\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"collapse-bordered vx-collapse collapse-icon accordion-icon-rotate collapse-border\">\r\n      {accordionBorderItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionBorder`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionMargin = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionMargin extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionMarginItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"vx-collapse collapse-icon accordion-icon-rotate\">\r\n      {accordionMarginItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionMargin`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const accordionHover = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collapse} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionHover extends React.Component {\r\n\r\n  state = { collapseID: \"\"}\r\n\r\n  toggleCollapse = collapseID => {\r\n      this.setState(prevState => ({\r\n        collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n      }))\r\n    }\r\n\r\n\r\n  render() {\r\n\r\n      const accordionHoverItems = collapseItems.map(collapseItem => {\r\n          return (\r\n            <Card\r\n              key={collapseItem.id}\r\n              onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            >\r\n              <CardHeader>\r\n                <CardTitle className=\"lead collapse-title collapsed\">\r\n                  {collapseItem.title}\r\n                </CardTitle>\r\n              </CardHeader>\r\n              <Collapse\r\n                isOpen={collapseItem.id === this.state.collapseID}\r\n                onEntering={this.onEntering}\r\n                onEntered={this.onEntered}\r\n                onExiting={this.onExiting}\r\n                onExited={this.onExited}\r\n              >\r\n                <CardBody>{collapseItem.content}</CardBody>\r\n              </Collapse>\r\n            </Card>\r\n          )\r\n        })\r\n\r\n    return(\r\n      <div className=\"vx-collapse collapse-icon accordion-icon-rotate\">\r\n      {accordionHoverItems}\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default AccordionHover\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const collapseUncontrolled = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {UncontrolledCollaspe} from \"reactstrap\"\r\n\r\nclass CollapseUncontrolled extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"vx-collapse collapse-bordered collapse-icon accordion-icon-rotate\">\r\n        <Card>\r\n          <CardHeader id=\"item-1\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 1\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-1\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader id=\"item-2\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 2\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-2\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader id=\"item-3\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 3\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-3\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n        <Card>\r\n          <CardHeader id=\"item-4\">\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              Collapse Item 4\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <UncontrolledCollapse toggler=\"#item-4\">\r\n            <CardBody>\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n              Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n            </CardBody>\r\n          </UncontrolledCollapse>\r\n        </Card>\r\n    </div>\r\n    )\r\n  }\r\n}\r\nexport default CollapseUncontrolled\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const collapseDefault = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport {Collaspe} from \"reactstrap\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 0,\r\n    title: \"Collapse Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 1,\r\n    title: \"Collapse Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Collapse Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Collapse Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass CollapseDefault extends React.Component {\r\n\r\n  state = {\r\n    collapseItems: []\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    let index = this.state.collapseItems.indexOf(collapseID)\r\n    if (index >= 0) {\r\n      let items = this.state.collapseItems\r\n      items.splice(index, index + 1)\r\n      this.setState({ collapseItems: items })\r\n    } else {\r\n      let items = this.state.collapseItems\r\n      items.push(collapseID)\r\n      this.setState({ collapseItems: items })\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const renderCollapse = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={this.state.collapseItems.includes(collapseItem.id)}\r\n            onEntering={this.onEntering}\r\n            onEntered={this.onEntered}\r\n            onExiting={this.onExiting}\r\n            onExited={this.onExited}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return(\r\n      <div className=\"vx-collapse collapse-bordered collapse-icon accordion-icon-rotate\">\r\n        {renderCollapse}\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default CollapseDefault\r\n  `}\r\n    </code>\r\n  </pre>\r\n)\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { collapseDefault } from \"./CollapseSourceCode\"\r\nconst collapseItems = [\r\n  {\r\n    id: 0,\r\n    title: \"Collapse Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 1,\r\n    title: \"Collapse Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Collapse Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Collapse Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass CollapseDefault extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseItems: [],\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    let index = this.state.collapseItems.indexOf(collapseID)\r\n    if (index >= 0) {\r\n      let items = this.state.collapseItems\r\n      items.splice(index, index + 1)\r\n      this.setState({ collapseItems: items })\r\n    } else {\r\n      let items = this.state.collapseItems\r\n      items.push(collapseID)\r\n      this.setState({ collapseItems: items })\r\n    }\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (this.state.collapseItems.includes(id))\r\n      this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const renderCollapse = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseItems.includes(collapseItem.id),\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseItems.includes(collapseItem.id),\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseItems.includes(collapseItem.id),\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseItems.includes(collapseItem.id)\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={this.state.collapseItems.includes(collapseItem.id)}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              With basic collapse you can open multiple items at a time. to add\r\n              bottom border use <code> .collapse-bordered</code> as a wrapper of\r\n              collapse cards.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  {renderCollapse}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {collapseDefault}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default CollapseDefault\r\n","import React from \"react\"\r\nimport {\r\n  UncontrolledCollapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { collapseUncontrolled } from \"./CollapseSourceCode\"\r\n\r\nclass CollapseUncontrolled extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Collapse Uncontrolled</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              With uncontrolled collapse you don't have to manage state you can\r\n              toggle collapse with <code>id</code> and <code>toggler</code>\r\n              attribute\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  <Card>\r\n                    <CardHeader id=\"item-1\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 1\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-1\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader id=\"item-2\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 2\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-2\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader id=\"item-3\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 3\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-3\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                  <Card>\r\n                    <CardHeader id=\"item-4\">\r\n                      <CardTitle className=\"lead collapse-title collapsed\">\r\n                        Collapse Item 4\r\n                      </CardTitle>\r\n                      <ChevronDown size={15} className=\"collapse-icon\" />\r\n                    </CardHeader>\r\n                    <UncontrolledCollapse toggler=\"#item-4\">\r\n                      <CardBody>\r\n                        Lorem ipsum dolor sit amet consectetur adipisicing elit.\r\n                        Repellat, voluptates?Lorem ipsum dolor sit amet.\r\n                      </CardBody>\r\n                    </UncontrolledCollapse>\r\n                  </Card>\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {collapseUncontrolled}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default CollapseUncontrolled\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordion } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass Accordion extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              You may want to open one item at a time for that you can use\r\n              accordion.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  {accordionItems}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordion}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Accordion\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionShadow } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionShadow extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionShadowItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            open: collapseItem.id === this.state.collapseID\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Shadow</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              use class <code>.accordion-shadow</code> as a wrapper of your\r\n              accordion/collapse card for shadow.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered accordion-shadow\">\r\n                  {accordionShadowItems}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionShadow}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionShadow\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionBorder } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionBorder extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionBorderItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          key={collapseItem.id}\r\n          onClick={() => this.toggleCollapse(collapseItem.id)}\r\n          className={classnames(\"collapse-border-item\", {\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Border</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use class <code>.collapse-border-item</code> with your collapsible\r\n              card.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse\">{accordionBorderItems}</div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionBorder}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionBorder\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionMargin } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionMargin extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionMarginItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <div className=\"collapse-margin\" key={collapseItem.id}>\r\n          <Card\r\n            onClick={() => this.toggleCollapse(collapseItem.id)}\r\n            className={classnames({\r\n              \"collapse-collapsed\":\r\n                this.state.status === \"Closed\" &&\r\n                this.state.collapseID === collapseItem.id,\r\n              \"collapse-shown\":\r\n                this.state.status === \"Opened\" &&\r\n                this.state.collapseID === collapseItem.id,\r\n              closing:\r\n                this.state.status === \"Closing...\" &&\r\n                this.state.collapseID === collapseItem.id,\r\n              opening:\r\n                this.state.status === \"Opening...\" &&\r\n                this.state.collapseID === collapseItem.id\r\n            })}\r\n          >\r\n            <CardHeader>\r\n              <CardTitle className=\"lead collapse-title collapsed\">\r\n                {collapseItem.title}\r\n              </CardTitle>\r\n              <ChevronDown size={15} className=\"collapse-icon\" />\r\n            </CardHeader>\r\n            <Collapse\r\n              isOpen={collapseItem.id === this.state.collapseID}\r\n              onEntering={() => this.onEntering(collapseItem.id)}\r\n              onEntered={() => this.onEntered(collapseItem.id)}\r\n              onExiting={() => this.onExiting(collapseItem.id)}\r\n              onExited={() => this.onExited(collapseItem.id)}\r\n            >\r\n              <CardBody>{collapseItem.content}</CardBody>\r\n            </Collapse>\r\n          </Card>\r\n        </div>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Margin</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use class <code>.collapse-Margin</code> as a wrapper of your\r\n              collapseible card.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse\">{accordionMarginItems}</div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionMargin}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionMargin\r\n","import React from \"react\"\r\nimport {\r\n  Collapse,\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, ChevronDown } from \"react-feather\"\r\nimport { accordionHover } from \"./CollapseSourceCode\"\r\n\r\nconst collapseItems = [\r\n  {\r\n    id: 1,\r\n    title: \"Accordion Item 1\",\r\n    content:\r\n      \"Pie dragée muffin. Donut cake liquorice marzipan carrot cake topping powder candy. Sugar plum brownie brownie cotton candy.\"\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Accordion Item 2\",\r\n    content:\r\n      \"Jelly-o brownie marshmallow soufflé I love jelly beans oat cake. I love gummies chocolate bar marshmallow sugar plum.\"\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"Accordion Item 3\",\r\n    content:\r\n      \"Pudding lollipop dessert chocolate gingerbread. Cake cupcake bonbon cupcake marshmallow. Gummi bears carrot cake bonbon cake.\"\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"Accordion Item 4\",\r\n    content:\r\n      \"Brownie sweet carrot cake dragée caramels fruitcake. Gummi bears tootsie roll croissant gingerbread dragée tootsie roll.\"\r\n  }\r\n]\r\n\r\nclass AccordionHover extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n    collapseID: \"\",\r\n    status: \"Closed\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  toggleCollapse = collapseID => {\r\n    this.setState(prevState => ({\r\n      collapseID: prevState.collapseID !== collapseID ? collapseID : \"\"\r\n    }))\r\n  }\r\n\r\n  onEntered = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opened\" })\r\n  }\r\n  onEntering = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Opening...\" })\r\n  }\r\n\r\n  onExited = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closed\" })\r\n  }\r\n\r\n  onExiting = id => {\r\n    if (id === this.state.collapseID) this.setState({ status: \"Closing...\" })\r\n  }\r\n\r\n  render() {\r\n    const accordionHoverItems = collapseItems.map(collapseItem => {\r\n      return (\r\n        <Card\r\n          onMouseEnter={() => this.toggleCollapse(collapseItem.id)}\r\n          key={collapseItem.id}\r\n          className={classnames({\r\n            \"collapse-collapsed\":\r\n              this.state.status === \"Closed\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            \"collapse-shown\":\r\n              this.state.status === \"Opened\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            closing:\r\n              this.state.status === \"Closing...\" &&\r\n              this.state.collapseID === collapseItem.id,\r\n            opening:\r\n              this.state.status === \"Opening...\" &&\r\n              this.state.collapseID === collapseItem.id\r\n          })}\r\n        >\r\n          <CardHeader>\r\n            <CardTitle className=\"lead collapse-title collapsed\">\r\n              {collapseItem.title}\r\n            </CardTitle>\r\n            <ChevronDown size={15} className=\"collapse-icon\" />\r\n          </CardHeader>\r\n          <Collapse\r\n            isOpen={collapseItem.id === this.state.collapseID}\r\n            onEntering={() => this.onEntering(collapseItem.id)}\r\n            onEntered={() => this.onEntered(collapseItem.id)}\r\n            onExiting={() => this.onExiting(collapseItem.id)}\r\n            onExited={() => this.onExited(collapseItem.id)}\r\n          >\r\n            <CardBody>{collapseItem.content}</CardBody>\r\n          </Collapse>\r\n        </Card>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Accordion Hover</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              To create a hover accordion call <code>.toggleCollapse</code> on{\" \"}\r\n              <code>mouseEnter</code> instead of <code>onClick</code>\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <div className=\"vx-collapse collapse-bordered\">\r\n                  {accordionHoverItems}\r\n                </div>\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {accordionHover}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default AccordionHover\r\n","import React from \"react\"\r\nimport BreadCrumbs from \"../../@vuexy/breadCrumbs/BreadCrumb\"\r\nimport CollapseDefault from \"./CollapseDefault\"\r\nimport CollapseUncontrolled from \"./CollapseUncontrolled\"\r\nimport Accordion from \"./Accordion\"\r\nimport AccordionShadow from \"./AccordionShadow\"\r\nimport AccordionBorder from \"./AccordionBorder\"\r\nimport AccordionMargin from \"./AccordionMargin\"\r\nimport AccordionHover from \"./AccordionHover\"\r\nimport { Row, Col } from \"reactstrap\"\r\nimport Prism from \"prismjs\"\r\nimport \"prismjs/components/prism-jsx.min\"\r\nclass Collaspe extends React.Component {\r\n  componentDidMount() {\r\n    Prism.highlightAll()\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <BreadCrumbs\r\n          breadCrumbTitle=\"Collapse\"\r\n          breadCrumbParent=\"Components\"\r\n          breadCrumbActive=\"Collapse\"\r\n        />\r\n        <Row>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <CollapseDefault />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <CollapseUncontrolled />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <Accordion />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <AccordionShadow />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <AccordionBorder />\r\n          </Col>\r\n          <Col xl=\"6\" lg=\"12\">\r\n            <AccordionMargin />\r\n          </Col>\r\n        </Row>\r\n        <AccordionHover />\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Collaspe\r\n","!function(t){var n=t.util.clone(t.languages.javascript),e=\"(?:\\\\{<S>*\\\\.{3}(?:[^{}]|<BRACES>)*\\\\})\";function a(t,n){return t=t.replace(/<S>/g,(function(){return\"(?:\\\\s|//.*(?!.)|/\\\\*(?:[^*]|\\\\*(?!/))\\\\*/)\"})).replace(/<BRACES>/g,(function(){return\"(?:\\\\{(?:\\\\{(?:\\\\{[^{}]*\\\\}|[^{}])*\\\\}|[^{}])*\\\\})\"})).replace(/<SPREAD>/g,(function(){return e})),RegExp(t,n)}e=a(e).source,t.languages.jsx=t.languages.extend(\"markup\",n),t.languages.jsx.tag.pattern=a(\"</?(?:[\\\\w.:-]+(?:<S>+(?:[\\\\w.:$-]+(?:=(?:\\\"(?:\\\\\\\\[^]|[^\\\\\\\\\\\"])*\\\"|'(?:\\\\\\\\[^]|[^\\\\\\\\'])*'|[^\\\\s{'\\\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*/?)?>\"),t.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/,t.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/,t.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,t.languages.jsx.tag.inside.comment=n.comment,t.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:a(\"<SPREAD>\"),inside:t.languages.jsx}},t.languages.jsx.tag),t.languages.insertBefore(\"inside\",\"special-attr\",{script:{pattern:a(\"=<BRACES>\"),alias:\"language-javascript\",inside:{\"script-punctuation\":{pattern:/^=(?=\\{)/,alias:\"punctuation\"},rest:t.languages.jsx}}},t.languages.jsx.tag);var s=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(s).join(\"\"):\"\"},g=function(n){for(var e=[],a=0;a<n.length;a++){var o=n[a],i=!1;if(\"string\"!=typeof o&&(\"tag\"===o.type&&o.content[0]&&\"tag\"===o.content[0].type?\"</\"===o.content[0].content[0].content?e.length>0&&e[e.length-1].tagName===s(o.content[0].content[1])&&e.pop():\"/>\"===o.content[o.content.length-1].content||e.push({tagName:s(o.content[0].content[1]),openedBraces:0}):e.length>0&&\"punctuation\"===o.type&&\"{\"===o.content?e[e.length-1].openedBraces++:e.length>0&&e[e.length-1].openedBraces>0&&\"punctuation\"===o.type&&\"}\"===o.content?e[e.length-1].openedBraces--:i=!0),(i||\"string\"==typeof o)&&e.length>0&&0===e[e.length-1].openedBraces){var r=s(o);a<n.length-1&&(\"string\"==typeof n[a+1]||\"plain-text\"===n[a+1].type)&&(r+=s(n[a+1]),n.splice(a+1,1)),a>0&&(\"string\"==typeof n[a-1]||\"plain-text\"===n[a-1].type)&&(r=s(n[a-1])+r,n.splice(a-1,1),a--),n[a]=new t.Token(\"plain-text\",r,null,r)}o.content&&\"string\"!=typeof o.content&&g(o.content)}};t.hooks.add(\"after-tokenize\",(function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||g(t.tokens)}))}(Prism);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _excluded = [\"tag\", \"isOpen\", \"className\", \"navbar\", \"cssModule\", \"children\", \"innerRef\"];\n\nvar _transitionStatusToCl;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport { mapToCssModules, omit, pick, TransitionTimeouts, TransitionPropTypeKeys, TransitionStatuses, tagPropType } from './utils';\n\nvar propTypes = _objectSpread(_objectSpread({}, Transition.propTypes), {}, {\n  isOpen: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  tag: tagPropType,\n  className: PropTypes.node,\n  navbar: PropTypes.bool,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n});\n\nvar defaultProps = _objectSpread(_objectSpread({}, Transition.defaultProps), {}, {\n  isOpen: false,\n  appear: false,\n  enter: true,\n  exit: true,\n  tag: 'div',\n  timeout: TransitionTimeouts.Collapse\n});\n\nvar transitionStatusToClassHash = (_transitionStatusToCl = {}, _transitionStatusToCl[TransitionStatuses.ENTERING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.ENTERED] = 'collapse show', _transitionStatusToCl[TransitionStatuses.EXITING] = 'collapsing', _transitionStatusToCl[TransitionStatuses.EXITED] = 'collapse', _transitionStatusToCl);\n\nfunction getTransitionClass(status) {\n  return transitionStatusToClassHash[status] || 'collapse';\n}\n\nfunction getHeight(node) {\n  return node.scrollHeight;\n}\n\nvar Collapse = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Collapse, _Component);\n\n  function Collapse(props) {\n    var _this;\n\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      height: null\n    };\n    ['onEntering', 'onEntered', 'onExit', 'onExiting', 'onExited'].forEach(function (name) {\n      _this[name] = _this[name].bind(_assertThisInitialized(_this));\n    });\n    return _this;\n  }\n\n  var _proto = Collapse.prototype;\n\n  _proto.onEntering = function onEntering(node, isAppearing) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onEntering(node, isAppearing);\n  };\n\n  _proto.onEntered = function onEntered(node, isAppearing) {\n    this.setState({\n      height: null\n    });\n    this.props.onEntered(node, isAppearing);\n  };\n\n  _proto.onExit = function onExit(node) {\n    this.setState({\n      height: getHeight(node)\n    });\n    this.props.onExit(node);\n  };\n\n  _proto.onExiting = function onExiting(node) {\n    // getting this variable triggers a reflow\n    var _unused = node.offsetHeight; // eslint-disable-line no-unused-vars\n\n    this.setState({\n      height: 0\n    });\n    this.props.onExiting(node);\n  };\n\n  _proto.onExited = function onExited(node) {\n    this.setState({\n      height: null\n    });\n    this.props.onExited(node);\n  };\n\n  _proto.render = function render() {\n    var _this2 = this;\n\n    var _this$props = this.props,\n        Tag = _this$props.tag,\n        isOpen = _this$props.isOpen,\n        className = _this$props.className,\n        navbar = _this$props.navbar,\n        cssModule = _this$props.cssModule,\n        children = _this$props.children,\n        innerRef = _this$props.innerRef,\n        otherProps = _objectWithoutPropertiesLoose(_this$props, _excluded);\n\n    var height = this.state.height;\n    var transitionProps = pick(otherProps, TransitionPropTypeKeys);\n    var childProps = omit(otherProps, TransitionPropTypeKeys);\n    return /*#__PURE__*/React.createElement(Transition, _extends({}, transitionProps, {\n      in: isOpen,\n      onEntering: this.onEntering,\n      onEntered: this.onEntered,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }), function (status) {\n      var collapseClass = getTransitionClass(status);\n      var classes = mapToCssModules(classNames(className, collapseClass, navbar && 'navbar-collapse'), cssModule);\n      var style = height === null ? null : {\n        height: height\n      };\n      return /*#__PURE__*/React.createElement(Tag, _extends({}, childProps, {\n        style: _objectSpread(_objectSpread({}, childProps.style), style),\n        className: classes,\n        ref: _this2.props.innerRef\n      }), children);\n    });\n  };\n\n  return Collapse;\n}(Component);\n\nCollapse.propTypes = propTypes;\nCollapse.defaultProps = defaultProps;\nexport default Collapse;"],"sourceRoot":""}