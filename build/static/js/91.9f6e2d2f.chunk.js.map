{"version":3,"sources":["components/@vuexy/chips/ChipSourceCode.js","components/@vuexy/chips/ChipsDefault.js","components/@vuexy/chips/ChipsColors.js","components/@vuexy/chips/ChipsAvatarColors.js","components/@vuexy/chips/ChipsIcons.js","components/@vuexy/chips/ChipsClosable.js","components/@vuexy/chips/ClosableIcons.js","components/@vuexy/chips/Chips.js","../node_modules/prismjs/components/prism-jsx.min.js","../node_modules/reactstrap/es/Nav.js","components/@vuexy/chips/ChipComponent.js"],"names":["chipsDefault","React","createElement","className","chipsColors","chipsAvatarColors","chipsIcons","chipsClosable","chipsClosableIcons","ChipsDefault","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","activeTab","toggleTab","tab","setState","_createClass","key","value","_this2","Fragment","Card","CardHeader","CardTitle","Nav","tabs","NavItem","NavLink","classnames","active","this","onClick","Eye","size","Code","CardBody","TabContent","TabPane","tabId","Chip","text","avatarText","avatarIcon","User","avatarImg","chipImg","closable","Component","ChipsColors","color","ChipsAvatarColors","avatarColor","ChipsIcons","Share","Mail","Slash","Battery","Edit","ChipsClosable","ChipsClosableIcons","closableIcon","Trash","Trash2","Delete","MinusCircle","XCircle","Chips","Prism","highlightAll","BreadCrumbs","breadCrumbTitle","breadCrumbParent","breadCrumbActive","Row","Col","sm","t","n","util","clone","languages","javascript","e","a","replace","RegExp","source","jsx","extend","tag","pattern","inside","comment","insertBefore","spread","script","alias","rest","s","content","map","join","g","o","i","type","tagName","pop","push","openedBraces","r","splice","Token","hooks","add","language","tokens","_excluded","propTypes","PropTypes","bool","pills","vertical","oneOfType","string","horizontal","justified","fill","navbar","card","tagPropType","cssModule","object","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","getVerticalClass","_extends","defaultProps","closeChip","target","closest","remove","src","alt","height","width","X"],"mappings":"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","file":"static/js/91.9f6e2d2f.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport const chipsDefault = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport Chip from \"./ChipComponent\"\r\nimport { User } from \"react-feather\"\r\nclass chipDefault extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Chip className=\"mr-1\" text=\"Base Chip\" />\r\n      <Chip className=\"mr-1\" avatarText=\"RX\" text=\"Avatar Text\" />\r\n      <Chip className=\"mr-1\" avatarIcon={<User />} text=\"Avatar Icon\" />\r\n      <Chip className=\"mr-1\" avatarImg={chipImg} text=\"Avatar Image\" />\r\n      <Chip text=\"Chip Closable\" closable />\r\n    )}\r\n}\r\nexport default chipDefault\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const chipsColors = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport Chip from \"./ChipComponent\"\r\nimport { User } from \"react-feather\"\r\nclass chipColors extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Chip className=\"mr-1\" color=\"success\" avatarText=\"RX\" text=\"Avatar Text\" />\r\n      <Chip className=\"mr-1\" color=\"info\" avatarIcon={<User />} text=\"Avatar Icon\" />\r\n      <Chip className=\"mr-1\" color=\"warning\" avatarImg={chipImg} text=\"Avatar Image\" />\r\n      <Chip color=\"danger\" text=\"Chip Closable\" closable />\r\n    )}\r\n}\r\nexport default chipColors\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const chipsAvatarColors = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport Chip from \"./ChipComponent\"\r\nimport { User } from \"react-feather\"\r\n\r\nclass chipAvatarColors extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Chip className=\"mr-1\" avatarColor=\"primary\" avatarText=\"RX\" text=\"Avatar Text\" />\r\n      <Chip className=\"mr-1\" avatarColor=\"success\" avatarText=\"VS\" text=\"Avatar Text\" />\r\n      <Chip className=\"mr-1\" avatarColor=\"info\" avatarIcon={<User />} text=\"Avatar Text\" />\r\n      <Chip className=\"mr-1\" avatarColor=\"danger\" avatarIcon={<User />} text=\"Avatar Text\" />\r\n      <Chip avatarColor=\"warning\" avatarIcon={<User />} text=\"Avatar Text\" />\r\n    )}\r\n}\r\nexport default chipAvatarColors\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const chipsIcons = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport Chip from \"./ChipComponent\"\r\nimport { User, Mail, Share, Slash, Battery, Edit } from \"react-feather\"\r\n\r\nclass chipIcons extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Chip className=\"mr-1\" avatarIcon={<User />} text=\"User Icon\" />\r\n      <Chip className=\"mr-1\" avatarColor=\"primary\" avatarIcon={<Share />} text=\"Share Icon\" />\r\n      <Chip className=\"mr-1\" avatarColor=\"success\" avatarIcon={<Mail />} text=\"Mail Icon\" />\r\n      <Chip className=\"mr-1\" avatarColor=\"danger\" avatarIcon={<Slash />} text=\"Block Icon\" />\r\n      <Chip className=\"mr-1\" avatarColor=\"warning\" avatarIcon={<Battery />} text=\"Battery Icon\" />\r\n      <Chip className=\"mr-1\" avatarColor=\"info\" avatarIcon={<Edit />} text=\"Edit Icon\" />\r\n    )}\r\n}\r\nexport default chipIcons\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const chipsClosable = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport Chip from \"./ChipComponent\"\r\n\r\nclass chipClosable extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <Chip className=\"mr-1\" text=\"Dribble\" closable />\r\n      <Chip className=\"mr-1\" text=\"Github\" closable />\r\n      <Chip className=\"mr-1\" text=\"Behance\" closable />\r\n      <Chip className=\"mr-1\" text=\"ReactJS\" closable />\r\n      <Chip text=\"Vuexy\" closable />\r\n    )}\r\n}\r\nexport default chipClosable\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n\r\nexport const chipsClosableIcons = (\r\n  <pre>\r\n    <code className=\"language-jsx\">\r\n      {`\r\nimport React from \"react\"\r\nimport Chip from \"./ChipComponent\"\r\nimport { Trash, Trash2, MinusCircle, Delete } from \"react-feather\"\r\n\r\nclass ChipClosableIcons extends React.Component {\r\n  render() {\r\n    return(\r\n      <Chip className=\"mr-1\" text=\"Dribble\" closableIcon={<Trash />} closable />\r\n      <Chip className=\"mr-1\" text=\"Github\" closableIcon={<Trash2 />} closable />\r\n      <Chip className=\"mr-1\" text=\"Behance\" closableIcon={<Delete />} closable />\r\n      <Chip className=\"mr-1\" text=\"ReactJS\" closableIcon={<MinusCircle />} closable />\r\n    )}\r\n}\r\nexport default ChipClosableIcons\r\n`}\r\n    </code>\r\n  </pre>\r\n)\r\n","import React from \"react\"\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport Chip from \"./ChipComponent\"\r\nimport { Eye, Code, User } from \"react-feather\"\r\nimport { chipsDefault } from \"./ChipSourceCode\"\r\nimport chipImg from \"../../../assets/img/portrait/small/avatar-s-2.jpg\"\r\nclass ChipsDefault extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Default</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>Chips helps you represent simple data with Various options.</p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Chip className=\"mr-1\" text=\"Basic Chip\" />\r\n                <Chip className=\"mr-1\" avatarText=\"RX\" text=\"Avatar Text\" />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarIcon={<User />}\r\n                  text=\"Avatar Icon\"\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarImg={chipImg}\r\n                  text=\"Avatar Image\"\r\n                />\r\n                <Chip text=\"Chip Closable\" closable />\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {chipsDefault}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default ChipsDefault\r\n","import React from \"react\"\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport Chip from \"./ChipComponent\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code, User } from \"react-feather\"\r\nimport { chipsColors } from \"./ChipSourceCode\"\r\nimport chipImg from \"../../../assets/img/portrait/small/avatar-s-2.jpg\"\r\nclass ChipsColors extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Colors</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use prop{\" \"}\r\n              <code>color=[primary | success | danger | info | warning ]</code>{\" \"}\r\n              to create a colored chip.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Chip className=\"mr-1\" color=\"primary\" text=\"Primary Chip\" />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  color=\"success\"\r\n                  avatarText=\"RX\"\r\n                  text=\"Avatar Text\"\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  color=\"info\"\r\n                  avatarIcon={<User />}\r\n                  text=\"Avatar Icon\"\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  color=\"warning\"\r\n                  avatarImg={chipImg}\r\n                  text=\"Avatar Image\"\r\n                />\r\n                <Chip color=\"danger\" text=\"Chip Closable\" closable />\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {chipsColors}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default ChipsColors\r\n","import React from \"react\"\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport Chip from \"./ChipComponent\"\r\nimport { Eye, Code, User } from \"react-feather\"\r\nimport { chipsAvatarColors } from \"./ChipSourceCode\"\r\n\r\nclass ChipsAvatarColors extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Avatar Colors</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use prop{\" \"}\r\n              <code>\r\n                avatarColor=[primary | success | danger | info | warning | dark]\r\n              </code>{\" \"}\r\n              to create a colored avatar chip.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarColor=\"primary\"\r\n                  avatarText=\"RX\"\r\n                  text=\"Avatar Text\"\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarColor=\"success\"\r\n                  avatarText=\"VS\"\r\n                  text=\"Avatar Text\"\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarColor=\"info\"\r\n                  avatarIcon={<User />}\r\n                  text=\"Avatar Text\"\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarColor=\"danger\"\r\n                  avatarIcon={<User />}\r\n                  text=\"Avatar Text\"\r\n                />\r\n                <Chip\r\n                  avatarColor=\"warning\"\r\n                  avatarIcon={<User />}\r\n                  text=\"Avatar Text\"\r\n                />\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {chipsAvatarColors}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default ChipsAvatarColors\r\n","import React from \"react\"\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport {\r\n  Eye,\r\n  Code,\r\n  User,\r\n  Share,\r\n  Mail,\r\n  Slash,\r\n  Battery,\r\n  Edit\r\n} from \"react-feather\"\r\nimport Chip from \"./ChipComponent\"\r\nimport { chipsIcons } from \"./ChipSourceCode\"\r\n\r\nclass ChipsIcons extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Icons</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use prop <code>avatarIcon</code> add icon to avatar.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Chip className=\"mr-1\" avatarIcon={<User />} text=\"User Icon\" />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarColor=\"primary\"\r\n                  avatarIcon={<Share />}\r\n                  text=\"Share Icon\"\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarColor=\"success\"\r\n                  avatarIcon={<Mail />}\r\n                  text=\"Mail Icon\"\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarColor=\"danger\"\r\n                  avatarIcon={<Slash />}\r\n                  text=\"Block Icon\"\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarColor=\"warning\"\r\n                  avatarIcon={<Battery />}\r\n                  text=\"Battery Icon\"\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  avatarColor=\"info\"\r\n                  avatarIcon={<Edit />}\r\n                  text=\"Edit Icon\"\r\n                />\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {chipsIcons}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default ChipsIcons\r\n","import React from \"react\"\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport Chip from \"./ChipComponent\"\r\nimport classnames from \"classnames\"\r\nimport { Eye, Code } from \"react-feather\"\r\nimport { chipsClosable } from \"./ChipSourceCode\"\r\n\r\nclass ChipsClosable extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Chips Closable</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              Use prop <code>closable</code> to make your chips closable.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Chip className=\"mr-1\" text=\"Dribble\" closable />\r\n                <Chip className=\"mr-1\" text=\"Github\" closable />\r\n                <Chip className=\"mr-1\" text=\"Behance\" closable />\r\n                <Chip className=\"mr-1\" text=\"ReactJS\" closable />\r\n                <Chip text=\"Vuexy\" closable />\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {chipsClosable}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default ChipsClosable\r\n","import React from \"react\"\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardTitle,\r\n  TabContent,\r\n  TabPane,\r\n  Nav,\r\n  NavItem,\r\n  NavLink\r\n} from \"reactstrap\"\r\nimport classnames from \"classnames\"\r\nimport {\r\n  Eye,\r\n  Code,\r\n  XCircle,\r\n  Trash,\r\n  Trash2,\r\n  Delete,\r\n  MinusCircle\r\n} from \"react-feather\"\r\nimport Chip from \"./ChipComponent\"\r\nimport { chipsClosableIcons } from \"./ChipSourceCode\"\r\n\r\nclass ChipsClosableIcons extends React.Component {\r\n  state = {\r\n    activeTab: \"1\"\r\n  }\r\n\r\n  toggleTab = tab => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({ activeTab: tab })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Customized Closeable Icon</CardTitle>\r\n            <div className=\"views\">\r\n              <Nav tabs>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"1\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"1\")\r\n                    }}\r\n                  >\r\n                    <Eye size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                  <NavLink\r\n                    className={classnames({\r\n                      active: this.state.activeTab === \"2\"\r\n                    })}\r\n                    onClick={() => {\r\n                      this.toggleTab(\"2\")\r\n                    }}\r\n                  >\r\n                    <Code size={15} />\r\n                  </NavLink>\r\n                </NavItem>\r\n              </Nav>\r\n            </div>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <p>\r\n              You can use prop <code>closableIcon</code> with prop{\" \"}\r\n              <code>closable</code> to create a chip with customized close icon.\r\n            </p>\r\n            <TabContent activeTab={this.state.activeTab}>\r\n              <TabPane tabId=\"1\">\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  text=\"Dribble\"\r\n                  closableIcon={<Trash />}\r\n                  closable\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  text=\"Github\"\r\n                  closableIcon={<Trash2 />}\r\n                  closable\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  text=\"Behance\"\r\n                  closableIcon={<Delete />}\r\n                  closable\r\n                />\r\n                <Chip\r\n                  className=\"mr-1\"\r\n                  text=\"ReactJS\"\r\n                  closableIcon={<MinusCircle />}\r\n                  closable\r\n                />\r\n                <Chip text=\"Vuexy\" closableIcon={<XCircle />} closable />\r\n              </TabPane>\r\n              <TabPane className=\"component-code\" tabId=\"2\">\r\n                {chipsClosableIcons}{\" \"}\r\n              </TabPane>\r\n            </TabContent>\r\n          </CardBody>\r\n        </Card>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default ChipsClosableIcons\r\n","import React from \"react\"\r\nimport { Row, Col } from \"reactstrap\"\r\nimport BreadCrumbs from \"../../@vuexy/breadCrumbs/BreadCrumb\"\r\nimport ChipsDefault from \"./ChipsDefault\"\r\nimport ChipsColors from \"./ChipsColors\"\r\nimport ChipsAvatarColors from \"./ChipsAvatarColors\"\r\nimport ChipsIcons from \"./ChipsIcons\"\r\nimport ChipsClosable from \"./ChipsClosable\"\r\nimport ChipsClosableIcons from \"./ClosableIcons\"\r\nimport Prism from \"prismjs\"\r\nimport \"prismjs/components/prism-jsx.min\"\r\nclass Chips extends React.Component {\r\n  componentDidMount() {\r\n    Prism.highlightAll()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <BreadCrumbs\r\n          breadCrumbTitle=\"Chips\"\r\n          breadCrumbParent=\"Extra Components\"\r\n          breadCrumbActive=\"Chips\"\r\n        />\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <ChipsDefault />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <ChipsColors />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <ChipsAvatarColors />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <ChipsIcons />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <ChipsClosable />\r\n          </Col>\r\n          <Col sm=\"12\">\r\n            <ChipsClosableIcons />\r\n          </Col>\r\n        </Row>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default Chips\r\n","!function(t){var n=t.util.clone(t.languages.javascript),e=\"(?:\\\\{<S>*\\\\.{3}(?:[^{}]|<BRACES>)*\\\\})\";function a(t,n){return t=t.replace(/<S>/g,(function(){return\"(?:\\\\s|//.*(?!.)|/\\\\*(?:[^*]|\\\\*(?!/))\\\\*/)\"})).replace(/<BRACES>/g,(function(){return\"(?:\\\\{(?:\\\\{(?:\\\\{[^{}]*\\\\}|[^{}])*\\\\}|[^{}])*\\\\})\"})).replace(/<SPREAD>/g,(function(){return e})),RegExp(t,n)}e=a(e).source,t.languages.jsx=t.languages.extend(\"markup\",n),t.languages.jsx.tag.pattern=a(\"</?(?:[\\\\w.:-]+(?:<S>+(?:[\\\\w.:$-]+(?:=(?:\\\"(?:\\\\\\\\[^]|[^\\\\\\\\\\\"])*\\\"|'(?:\\\\\\\\[^]|[^\\\\\\\\'])*'|[^\\\\s{'\\\"/>=]+|<BRACES>))?|<SPREAD>))*<S>*/?)?>\"),t.languages.jsx.tag.inside.tag.pattern=/^<\\/?[^\\s>\\/]*/,t.languages.jsx.tag.inside[\"attr-value\"].pattern=/=(?!\\{)(?:\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"|'(?:\\\\[\\s\\S]|[^\\\\'])*'|[^\\s'\">]+)/,t.languages.jsx.tag.inside.tag.inside[\"class-name\"]=/^[A-Z]\\w*(?:\\.[A-Z]\\w*)*$/,t.languages.jsx.tag.inside.comment=n.comment,t.languages.insertBefore(\"inside\",\"attr-name\",{spread:{pattern:a(\"<SPREAD>\"),inside:t.languages.jsx}},t.languages.jsx.tag),t.languages.insertBefore(\"inside\",\"special-attr\",{script:{pattern:a(\"=<BRACES>\"),alias:\"language-javascript\",inside:{\"script-punctuation\":{pattern:/^=(?=\\{)/,alias:\"punctuation\"},rest:t.languages.jsx}}},t.languages.jsx.tag);var s=function(t){return t?\"string\"==typeof t?t:\"string\"==typeof t.content?t.content:t.content.map(s).join(\"\"):\"\"},g=function(n){for(var e=[],a=0;a<n.length;a++){var o=n[a],i=!1;if(\"string\"!=typeof o&&(\"tag\"===o.type&&o.content[0]&&\"tag\"===o.content[0].type?\"</\"===o.content[0].content[0].content?e.length>0&&e[e.length-1].tagName===s(o.content[0].content[1])&&e.pop():\"/>\"===o.content[o.content.length-1].content||e.push({tagName:s(o.content[0].content[1]),openedBraces:0}):e.length>0&&\"punctuation\"===o.type&&\"{\"===o.content?e[e.length-1].openedBraces++:e.length>0&&e[e.length-1].openedBraces>0&&\"punctuation\"===o.type&&\"}\"===o.content?e[e.length-1].openedBraces--:i=!0),(i||\"string\"==typeof o)&&e.length>0&&0===e[e.length-1].openedBraces){var r=s(o);a<n.length-1&&(\"string\"==typeof n[a+1]||\"plain-text\"===n[a+1].type)&&(r+=s(n[a+1]),n.splice(a+1,1)),a>0&&(\"string\"==typeof n[a-1]||\"plain-text\"===n[a-1].type)&&(r=s(n[a-1])+r,n.splice(a-1,1),a--),n[a]=new t.Token(\"plain-text\",r,null,r)}o.content&&\"string\"!=typeof o.content&&g(o.content)}};t.hooks.add(\"after-tokenize\",(function(t){\"jsx\"!==t.language&&\"tsx\"!==t.language||g(t.tokens)}))}(Prism);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"tabs\", \"pills\", \"vertical\", \"horizontal\", \"justified\", \"fill\", \"navbar\", \"card\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tabs: PropTypes.bool,\n  pills: PropTypes.bool,\n  vertical: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  horizontal: PropTypes.string,\n  justified: PropTypes.bool,\n  fill: PropTypes.bool,\n  navbar: PropTypes.bool,\n  card: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'ul',\n  vertical: false\n};\n\nvar getVerticalClass = function getVerticalClass(vertical) {\n  if (vertical === false) {\n    return false;\n  } else if (vertical === true || vertical === 'xs') {\n    return 'flex-column';\n  }\n\n  return \"flex-\" + vertical + \"-column\";\n};\n\nvar Nav = function Nav(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      tabs = props.tabs,\n      pills = props.pills,\n      vertical = props.vertical,\n      horizontal = props.horizontal,\n      justified = props.justified,\n      fill = props.fill,\n      navbar = props.navbar,\n      card = props.card,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, navbar ? 'navbar-nav' : 'nav', horizontal ? \"justify-content-\" + horizontal : false, getVerticalClass(vertical), {\n    'nav-tabs': tabs,\n    'card-header-tabs': card && tabs,\n    'nav-pills': pills,\n    'card-header-pills': card && pills,\n    'nav-justified': justified,\n    'nav-fill': fill\n  }), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nNav.propTypes = propTypes;\nNav.defaultProps = defaultProps;\nexport default Nav;","import React from \"react\"\r\nimport { X } from \"react-feather\"\r\nclass Chip extends React.Component {\r\n  closeChip = e => {\r\n    e.target.closest(\".chip\").remove()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`chip ${this.props.className} ${\r\n          this.props.color ? `chip-${this.props.color}` : null\r\n        }`}\r\n      >\r\n        <div className=\"chip-body\">\r\n          {(!this.props.avatarImg && this.props.avatarText) ||\r\n          (!this.props.avatarImg && this.props.avatarIcon) ? (\r\n            <div\r\n              className={`avatar ${\r\n                this.props.avatarColor ? `bg-${this.props.avatarColor}` : null\r\n              }`}\r\n            >\r\n              <div className=\"avatar-content\">\r\n                {this.props.avatarText ? this.props.avatarText : null}\r\n                {this.props.avatarIcon ? this.props.avatarIcon : null}\r\n              </div>\r\n            </div>\r\n          ) : this.props.avatarImg ? (\r\n            <div className=\"avatar\">\r\n              <img\r\n                src={this.props.avatarImg}\r\n                alt=\"chipImg\"\r\n                height=\"20\"\r\n                width=\"20\"\r\n              />\r\n            </div>\r\n          ) : null}\r\n          <div className=\"chip-text\">{this.props.text}</div>\r\n          {this.props.closable ? (\r\n            <div className=\"chip-closable\" onClick={e => this.closeChip(e)}>\r\n              {this.props.closableIcon ? this.props.closableIcon : <X />}\r\n            </div>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chip\r\n"],"sourceRoot":""}